const o=Symbol(),d=new WeakMap;let u;function v(h,t){u=[];const e=h();t.set(e),u.push(e);const s=new AbortController,{signal:n}=s,i=()=>{s.abort(),v(h,t)};for(const a of u)a.addEventListener?.("change",i,{signal:n});return u=null,t}function p(h){if(typeof h=="function")return v(h,p({}).value);if(h!=null&&h[o]&&(h=h.get()),d.has(h))return d.get(h);const t={thing:h},s=new c(t,"thing").proxy;return h&&typeof h=="object"&&d.set(h,s),s}class c extends EventTarget{static map=new WeakMap;static parentMap=new WeakMap;object;key;callback;specials={valueOf:()=>this.value,toString:()=>this.value.toString(),toJSON:()=>this.isObject?this.value:JSON.stringify(this.value),get:()=>this.value,set:t=>{t?.[o]&&(t=t.get()),this.change(()=>this.object[this.key]=t)},is:t=>t?.[o]?this.value==t.get():this.value==t,delete:()=>this.change(()=>delete this.object[this.key]),typeof:()=>typeof this.value,addEventListener:(...t)=>this.addEventListener(...t),removeEventListener:(...t)=>this.removeEventListener(...t),dispatchEvent:(...t)=>this.dispatchEvent(...t)};constructor(t,e,s=null){c.map.has(t)||c.map.set(t,{});const n=c.map.get(t);if(n[e])return n[e];super();Object.assign(this,{object:t,key:e,callback:s}),n[e]=this,this.initialize(),this.changeValue(this.value)}get value(){return this.object[this.key]}get isObject(){return typeof this.value=="object"&&this.value!=null}get isArray(){return Array.isArray(this.value)}change(t){const e=this.value;t();const{value:s,key:n}=this;this.changeValue(s,e),this.dispatchValueChange(s,e),c.parentMap.get(this.object)?.forEach(i=>i.dispatchPropertyChange(n))}dispatchValueChange(t,e){if(t===e)return;const s={oldValue:e,value:t};this.dispatchEvent(new CustomEvent("valuechange",{detail:s})),this.dispatchEvent(new CustomEvent("change",{detail:s}))}dispatchPropertyChange(t){const e=t==null?{unknown:!0}:{property:t};this.dispatchEvent(new CustomEvent("propertychange",{detail:e})),this.dispatchEvent(new CustomEvent("change",{detail:e}))}changeValue(t,e){c.parentMap.get(e)?.delete(this),this.isObject&&(typeof t!="object"||t==null||(c.parentMap.has(t)||c.parentMap.set(t,new Set),c.parentMap.get(t).add(this)))}isPropertyReference(t){return this.isObject?this.isArray?typeof t=="symbol"?!1:!!(Number.isInteger(+t)&&t>=0):!0:!1}initialize(){const t=this.callback??{},e={};e.get=(i,a)=>this.get(a),e.set=(i,a,l)=>(this.isPropertyReference(a)&&this.proxy[a].set(l),!0),e.deleteProperty=(i,a)=>{if(!!this.isPropertyReference(a))return this.proxy[a].delete(),!0},e.apply=(i,...a)=>this.callback.apply(...a);const s=(i,a)=>e[a]??((l,...f)=>Reflect[a](this.value,...f)),n=new Proxy(e,{get:s});this.proxy=new Proxy(t,n)}get(t){if(t==o)return!0;if(!this.isObject&&t==Symbol.toPrimitive)return()=>this.value;const e=this.specials[t];if((!this.isObject||this.isArray)&&e)return e;const s=this.getFlattenedValue(t);if(!this.isPropertyReference(t))return s;const n=this.value,{proxy:i}=new c(n,t,e);return u?.push(i),i}getFlattenedValue(t){const e=this.value[t];return typeof e!="function"?e:this.isArray?(...s)=>this.callArrayMethod(this.value,t,...s):e.bind(this.value)}callArrayMethod(t,e,...s){const n=[...t],i=t,a=t[e](...s);if(!(n.length!=i.length||i.some((r,m)=>r!==n[m])))return a;const f=Math.max(n.length,i.length),g=[];for(let r=0;r<f;r++)i[r]!==n[r]&&g.push(r);for(const r of g)this.changeValue(i[r],n[r]);const b=c.map.get(t);for(const r of g)b?.[r]?.dispatchValueChange(i[r],n[r]);return c.parentMap.get(t)?.forEach(r=>r.dispatchPropertyChange()),a}}export{p as default};
